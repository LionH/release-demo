name: Spring Boot Showcase CI/CD

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.4

      - name: Build with Gradle
        run: ./gradlew build

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build --build-arg JAR_FILE=releasedemo-${{ github.ref_name }}.jar -t ${{ secrets.DOCKER_USERNAME }}/release-demo:${{ github.ref_name }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/release-demo:${{ github.ref_name }}

      - name: Import GPG Key
        run: |
          echo "${{ secrets.SIGNING_KEY }}" | base64 --decode | gpg --batch --import
        env:
          GNUPGHOME: ${{ runner.temp }}/.gnupg

      - name: Configure GPG Trust
        run: |
          gpg --batch --yes --edit-key FD29DA8C21AE37A7FECA9CC7D8B8C2F2F45979EB trust quit
        env:
          GNUPGHOME: ${{ runner.temp }}/.gnupg

      - name: Verify GPG Key
        run: gpg --list-secret-keys --keyid-format LONG
        env:
          GNUPGHOME: ${{ runner.temp }}/.gnupg

      - name: Publish to Maven Central
        run: ./gradlew uploadDeploymentBundle
        env:
          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          BEARER_TOKEN: ${{ secrets.MAVEN_BEARER_TOKEN }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          GNUPGHOME: ${{ runner.temp }}/.gnupg

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Render Deployment
        run: |
          curl -X POST \
            -H "Accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{
              "serviceId": "${{ secrets.RENDER_SERVICE_ID }}",
              "image": "${{ secrets.DOCKER_USERNAME }}/release-demo:${{ github.ref_name }}"
            }' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
